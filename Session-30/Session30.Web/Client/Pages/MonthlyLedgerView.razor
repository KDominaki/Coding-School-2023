@page "/ledger"

@using Session30.Models;
@using Session30.Web.Shared;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime


<PageTitle>Ledger</PageTitle>
<h3 class="display-3">Ledger</h3>

<style>
    body {
        background-color: #FAF8F1
    }

    .main-btn {
        margin-top: 15px;
        margin-bottom: 15px;
    }

    h3 {
        border-bottom: double;
    }
</style>

@if (isLoading)
{
        <div class="spinner-border text-success" role="status">
            <span class="sr-only"></span>
        </div>
    <p style="color:purple">Loading...</p>
}
else
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Date</th>
                <th>Payment Type</th>
                <th>Total Value</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in transactions)
            {
                <tr>
                    <td>@customer.Date</td>
                    <td>@customer.PaymentMethod</td>
                    <td>@customer.TotalValue</td>
                    
                </tr>
            }
        </tbody>
    </table>
}

@code{
    private List<Transaction> transactions = new List<Transaction>();

    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadItemsFromServer();
        isLoading = false;
    }
    private async Task LoadItemsFromServer()
    {
        transactions = await httpClient.GetFromJsonAsync<List<Transaction>>("ledger");
    }
    
}