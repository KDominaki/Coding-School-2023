@page "/rent_edit"

@using Session30.Models;
@using Session30.Web.Shared;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime

<h3 class="display-3">Rent Edit</h3>

<style>
    body {
        background-color: #FAF8F1
    }

    h3 {
        font-weight: bold;
    }
</style>

@if (Rent == null)
{
    <p>Loading ...</p>

}
else
{
    <div class="col-md-6">
        <label class="form-label">Name</label>
        <input class="form-control" @bind="@Rent.Price" />
    </div>
   <div class="row mt-2">
        <div class="col">
            <button class="btn btn-success" @onclick="OnSave">Save</button>
            <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
        </div>

    </div>
}

@code {
    [Parameter] public int? Id { get; set; }
    Rent Rent { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Rent = await httpClient.GetFromJsonAsync<Rent>($"ledger/{1}");
    }

    private async Task OnSave()
    {
        try
        {
            HttpResponseMessage? response = null;

            response = await httpClient.PutAsJsonAsync("ledger", Rent);

            response.EnsureSuccessStatusCode();
            navigationManager.NavigateTo("ledger");
        }
        catch (Exception)
        {
            var confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Ops something went wrong. Make sure you filled the form correctly");
        }
    }
    private void OnCancel()
    {
        navigationManager.NavigateTo("ledger");
    }
}
